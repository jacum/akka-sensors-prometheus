
akka {

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  jvm-exit-on-fatal-error = true
  log-config-on-start = off

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"

    default-dispatcher {
      type = "akka.dispatch.InstrumentedDispatcherConfigurator"
      executor = "akka.dispatch.InstrumentedExecutor"

      instrumented-executor {
        delegate = "fork-join-executor"
        measure-runs = true
        watch-runs = true
        too-long-run = 3s
        check-interval = 1s
      }
    }

  }
  //    default-blocking-io-dispatcher = ...

//
//  cluster {
//    roles = ["state-node"]
//    min-nr-of-members = 1
//    configuration-compatibility-check.enforce-on-join = off
//    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
//
//    sharding {
//      least-shard-allocation-strategy.rebalance-threshold = 5
//      remember-entities = on
//    }
//    shutdown-after-unsuccessful-join-seed-nodes = 5m
//    akka.remote.use-passive-connections = off
//
//    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
//
//    split-brain-resolver {
//      active-strategy = keep-majority
//      stable-after = 20s
//      down-all-when-unstable = on
//    }
//  }
//
//  discovery {
//    kubernetes-api {
//      pod-label-selector = "akka-cluster=%s"
//    }
//  }

  extensions = [
    akka.persistence.Persistence,
    akka.sensors.AkkaSensorsExtension
  ]
//
//  management {
//    cluster.bootstrap {
//      contact-point-discovery {
//        service-name = "bakery"
//        discovery-method = kubernetes-api
//        required-contact-point-nr = 1
//      }
//    }
//    health-checks {
//      readiness-path = "health/ready"
//      liveness-path = "health/alive"
//      liveness-checks {
////        cluster-health = "com.ing.bakery.baker.ClusterHealthCheck"
//      }
//      readiness-checks {
////        name = "com.ing.bakery.baker.BakerReadinessCheck"
//      }
//    }
//  }
}